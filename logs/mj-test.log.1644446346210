INFO  23:35:53,629 - Compiling source file: C:\Users\vladan\Desktop\java\MJCompiler\test\program.mj
INFO  23:35:53,706 - #2 program
INFO  23:35:53,706 - #32 test301
INFO  23:35:53,706 - #27 const
INFO  23:35:53,708 - #32 int
INFO  23:35:53,708 - #32 nula
INFO  23:35:53,710 - #7 =
INFO  23:35:53,711 - #33 0
INFO  23:35:53,711 - #5 ;
INFO  23:35:53,712 - #27 const
INFO  23:35:53,713 - #32 int
INFO  23:35:53,713 - #32 jedan
INFO  23:35:53,713 - #7 =
INFO  23:35:53,714 - #33 1
INFO  23:35:53,714 - #5 ;
INFO  23:35:53,714 - #27 const
INFO  23:35:53,714 - #32 int
INFO  23:35:53,715 - #32 pet
INFO  23:35:53,715 - #7 =
INFO  23:35:53,715 - #33 5
INFO  23:35:53,715 - #5 ;
INFO  23:35:53,715 - #32 int
INFO  23:35:53,716 - #32 niz
INFO  23:35:53,716 - #8 [
INFO  23:35:53,717 - #9 ]
INFO  23:35:53,717 - #5 ;
INFO  23:35:53,717 - #32 char
INFO  23:35:53,718 - #32 nizch
INFO  23:35:53,718 - #8 [
INFO  23:35:53,718 - #9 ]
INFO  23:35:53,718 - #5 ;
INFO  23:35:53,719 - #3 {
INFO  23:35:53,719 - #28 void
INFO  23:35:53,721 - #32 main
INFO  23:35:53,722 - #13 (
INFO  23:35:53,723 - #14 )
INFO  23:35:53,724 - #32 int
INFO  23:35:53,724 - #32 bodovi
INFO  23:35:53,724 - #5 ;
INFO  23:35:53,726 - #32 bool
INFO  23:35:53,727 - #32 bt
INFO  23:35:53,727 - #5 ;
INFO  23:35:53,727 - #3 {
INFO  23:35:53,728 - #32 niz
INFO  23:35:53,728 - #7 =
INFO  23:35:53,728 - #26 new
INFO  23:35:53,731 - #32 int
INFO  23:35:53,731 - #8 [
INFO  23:35:53,731 - #33 3
INFO  23:35:53,732 - #9 ]
INFO  23:35:53,732 - #5 ;
INFO  23:35:53,733 - #32 niz
INFO  23:35:53,734 - #8 [
INFO  23:35:53,735 - #32 nula
INFO  23:35:53,736 - #9 ]
INFO  23:35:53,737 - #7 =
INFO  23:35:53,737 - #32 jedan
INFO  23:35:53,738 - #5 ;
INFO  23:35:53,738 - #32 niz
INFO  23:35:53,738 - #8 [
INFO  23:35:53,738 - #33 1
INFO  23:35:53,738 - #9 ]
INFO  23:35:53,739 - #7 =
INFO  23:35:53,739 - #33 2
INFO  23:35:53,739 - #5 ;
INFO  23:35:53,739 - #32 niz
INFO  23:35:53,739 - #8 [
INFO  23:35:53,740 - #32 niz
INFO  23:35:53,740 - #8 [
INFO  23:35:53,740 - #32 jedan
INFO  23:35:53,740 - #9 ]
INFO  23:35:53,740 - #9 ]
INFO  23:35:53,740 - #7 =
INFO  23:35:53,740 - #32 niz
INFO  23:35:53,740 - #8 [
INFO  23:35:53,741 - #32 niz
INFO  23:35:53,741 - #8 [
INFO  23:35:53,741 - #33 0
INFO  23:35:53,741 - #9 ]
INFO  23:35:53,741 - #9 ]
INFO  23:35:53,741 - #15 *
INFO  23:35:53,741 - #33 3
INFO  23:35:53,743 - #5 ;
INFO  23:35:53,744 - #32 bodovi
INFO  23:35:53,744 - #7 =
INFO  23:35:53,744 - #32 niz
INFO  23:35:53,744 - #8 [
INFO  23:35:53,744 - #33 2
INFO  23:35:53,744 - #9 ]
INFO  23:35:53,744 - #16 /
INFO  23:35:53,745 - #32 niz
INFO  23:35:53,745 - #8 [
INFO  23:35:53,745 - #33 0
INFO  23:35:53,745 - #9 ]
INFO  23:35:53,746 - #5 ;
INFO  23:35:53,746 - #30 print
INFO  23:35:53,746 - #13 (
INFO  23:35:53,746 - #32 bodovi
INFO  23:35:53,746 - #14 )
INFO  23:35:53,746 - #5 ;
INFO  23:35:53,746 - #30 print
INFO  23:35:53,747 - #13 (
INFO  23:35:53,747 - #32 niz
INFO  23:35:53,747 - #8 [
INFO  23:35:53,747 - #33 2
INFO  23:35:53,748 - #9 ]
INFO  23:35:53,748 - #14 )
INFO  23:35:53,748 - #5 ;
INFO  23:35:53,748 - #4 }
INFO  23:35:53,748 - #4 }
INFO  23:35:53,763 - Program(
  ProgName(
   test301
  ) [ProgName]
  ItemDeclarations(
    ItemDeclarations(
      ItemDeclarations(
        ItemDeclarations(
          ItemDeclarations(
            NoItemDecl(
            ) [NoItemDecl]
            Constant(
              ConstDecl(
                Type(
                 int
                ) [Type]
                OneConst(
                  SingleNumConst(
                   nula
                   0
                  ) [SingleNumConst]
                ) [OneConst]
              ) [ConstDecl]
            ) [Constant]
          ) [ItemDeclarations]
          Constant(
            ConstDecl(
              Type(
               int
              ) [Type]
              OneConst(
                SingleNumConst(
                 jedan
                 1
                ) [SingleNumConst]
              ) [OneConst]
            ) [ConstDecl]
          ) [Constant]
        ) [ItemDeclarations]
        Constant(
          ConstDecl(
            Type(
             int
            ) [Type]
            OneConst(
              SingleNumConst(
               pet
               5
              ) [SingleNumConst]
            ) [OneConst]
          ) [ConstDecl]
        ) [Constant]
      ) [ItemDeclarations]
      VarsDec(
        SingleVar(
          Type(
           int
          ) [Type]
          ArrVarDecl(
            ArrVar(
             niz
            ) [ArrVar]
          ) [ArrVarDecl]
        ) [SingleVar]
      ) [VarsDec]
    ) [ItemDeclarations]
    VarsDec(
      SingleVar(
        Type(
         char
        ) [Type]
        ArrVarDecl(
          ArrVar(
           nizch
          ) [ArrVar]
        ) [ArrVarDecl]
      ) [SingleVar]
    ) [VarsDec]
  ) [ItemDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      ItemDeclarations(
        ItemDeclarations(
          NoItemDecl(
          ) [NoItemDecl]
          VarsDec(
            SingleVar(
              Type(
               int
              ) [Type]
              SimpleVar(
                VarSingle(
                 bodovi
                ) [VarSingle]
              ) [SimpleVar]
            ) [SingleVar]
          ) [VarsDec]
        ) [ItemDeclarations]
        VarsDec(
          SingleVar(
            Type(
             bool
            ) [Type]
            SimpleVar(
              VarSingle(
               bt
              ) [VarSingle]
            ) [SimpleVar]
          ) [SingleVar]
        ) [VarsDec]
      ) [ItemDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  StatementJedini(
                    DesStatement(
                      AssignDesign(
                        SingleDesignator(
                         niz
                        ) [SingleDesignator]
                        ExprS(
                          Positive(
                          ) [Positive]
                          TermS(
                            NewFactor(
                              Type(
                               int
                              ) [Type]
                              ExprS(
                                Positive(
                                ) [Positive]
                                TermS(
                                  NumFactor(
                                   3
                                  ) [NumFactor]
                                ) [TermS]
                              ) [ExprS]
                            ) [NewFactor]
                          ) [TermS]
                        ) [ExprS]
                      ) [AssignDesign]
                    ) [DesStatement]
                  ) [StatementJedini]
                  DesStatement(
                    AssignDesign(
                      ArrayDesignator(
                        DesignatorArr(
                          SingleDesignator(
                           niz
                          ) [SingleDesignator]
                        ) [DesignatorArr]
                        ExprS(
                          Positive(
                          ) [Positive]
                          TermS(
                            DesignatorFactor(
                              SingleDesignator(
                               nula
                              ) [SingleDesignator]
                            ) [DesignatorFactor]
                          ) [TermS]
                        ) [ExprS]
                      ) [ArrayDesignator]
                      ExprS(
                        Positive(
                        ) [Positive]
                        TermS(
                          DesignatorFactor(
                            SingleDesignator(
                             jedan
                            ) [SingleDesignator]
                          ) [DesignatorFactor]
                        ) [TermS]
                      ) [ExprS]
                    ) [AssignDesign]
                  ) [DesStatement]
                ) [Statements]
                DesStatement(
                  AssignDesign(
                    ArrayDesignator(
                      DesignatorArr(
                        SingleDesignator(
                         niz
                        ) [SingleDesignator]
                      ) [DesignatorArr]
                      ExprS(
                        Positive(
                        ) [Positive]
                        TermS(
                          NumFactor(
                           1
                          ) [NumFactor]
                        ) [TermS]
                      ) [ExprS]
                    ) [ArrayDesignator]
                    ExprS(
                      Positive(
                      ) [Positive]
                      TermS(
                        NumFactor(
                         2
                        ) [NumFactor]
                      ) [TermS]
                    ) [ExprS]
                  ) [AssignDesign]
                ) [DesStatement]
              ) [Statements]
              DesStatement(
                AssignDesign(
                  ArrayDesignator(
                    DesignatorArr(
                      SingleDesignator(
                       niz
                      ) [SingleDesignator]
                    ) [DesignatorArr]
                    ExprS(
                      Positive(
                      ) [Positive]
                      TermS(
                        DesignatorFactor(
                          ArrayDesignator(
                            DesignatorArr(
                              SingleDesignator(
                               niz
                              ) [SingleDesignator]
                            ) [DesignatorArr]
                            ExprS(
                              Positive(
                              ) [Positive]
                              TermS(
                                DesignatorFactor(
                                  SingleDesignator(
                                   jedan
                                  ) [SingleDesignator]
                                ) [DesignatorFactor]
                              ) [TermS]
                            ) [ExprS]
                          ) [ArrayDesignator]
                        ) [DesignatorFactor]
                      ) [TermS]
                    ) [ExprS]
                  ) [ArrayDesignator]
                  ExprS(
                    Positive(
                    ) [Positive]
                    TermC(
                      TermS(
                        DesignatorFactor(
                          ArrayDesignator(
                            DesignatorArr(
                              SingleDesignator(
                               niz
                              ) [SingleDesignator]
                            ) [DesignatorArr]
                            ExprS(
                              Positive(
                              ) [Positive]
                              TermS(
                                DesignatorFactor(
                                  ArrayDesignator(
                                    DesignatorArr(
                                      SingleDesignator(
                                       niz
                                      ) [SingleDesignator]
                                    ) [DesignatorArr]
                                    ExprS(
                                      Positive(
                                      ) [Positive]
                                      TermS(
                                        NumFactor(
                                         0
                                        ) [NumFactor]
                                      ) [TermS]
                                    ) [ExprS]
                                  ) [ArrayDesignator]
                                ) [DesignatorFactor]
                              ) [TermS]
                            ) [ExprS]
                          ) [ArrayDesignator]
                        ) [DesignatorFactor]
                      ) [TermS]
                      MulOperator(
                      ) [MulOperator]
                      NumFactor(
                       3
                      ) [NumFactor]
                    ) [TermC]
                  ) [ExprS]
                ) [AssignDesign]
              ) [DesStatement]
            ) [Statements]
            DesStatement(
              AssignDesign(
                SingleDesignator(
                 bodovi
                ) [SingleDesignator]
                ExprS(
                  Positive(
                  ) [Positive]
                  TermC(
                    TermS(
                      DesignatorFactor(
                        ArrayDesignator(
                          DesignatorArr(
                            SingleDesignator(
                             niz
                            ) [SingleDesignator]
                          ) [DesignatorArr]
                          ExprS(
                            Positive(
                            ) [Positive]
                            TermS(
                              NumFactor(
                               2
                              ) [NumFactor]
                            ) [TermS]
                          ) [ExprS]
                        ) [ArrayDesignator]
                      ) [DesignatorFactor]
                    ) [TermS]
                    DivOperator(
                    ) [DivOperator]
                    DesignatorFactor(
                      ArrayDesignator(
                        DesignatorArr(
                          SingleDesignator(
                           niz
                          ) [SingleDesignator]
                        ) [DesignatorArr]
                        ExprS(
                          Positive(
                          ) [Positive]
                          TermS(
                            NumFactor(
                             0
                            ) [NumFactor]
                          ) [TermS]
                        ) [ExprS]
                      ) [ArrayDesignator]
                    ) [DesignatorFactor]
                  ) [TermC]
                ) [ExprS]
              ) [AssignDesign]
            ) [DesStatement]
          ) [Statements]
          PrintStatementNoArg(
            ExprS(
              Positive(
              ) [Positive]
              TermS(
                DesignatorFactor(
                  SingleDesignator(
                   bodovi
                  ) [SingleDesignator]
                ) [DesignatorFactor]
              ) [TermS]
            ) [ExprS]
          ) [PrintStatementNoArg]
        ) [Statements]
        PrintStatementNoArg(
          ExprS(
            Positive(
            ) [Positive]
            TermS(
              DesignatorFactor(
                ArrayDesignator(
                  DesignatorArr(
                    SingleDesignator(
                     niz
                    ) [SingleDesignator]
                  ) [DesignatorArr]
                  ExprS(
                    Positive(
                    ) [Positive]
                    TermS(
                      NumFactor(
                       2
                      ) [NumFactor]
                    ) [TermS]
                  ) [ExprS]
                ) [ArrayDesignator]
              ) [DesignatorFactor]
            ) [TermS]
          ) [ExprS]
        ) [PrintStatementNoArg]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:35:53,764 - ===================================
INFO  23:35:53,767 - Deklarisana je promenljiva niza : niz na liniji 9
INFO  23:35:53,768 - Deklarisana je promenljiva niza : nizch na liniji 10
INFO  23:35:53,768 - Obradjuje se funkcija : main na liniji 13
INFO  23:35:53,768 - Deklarisana je promenljiva : bodovitipa1 na liniji 14
INFO  23:35:53,768 - Deklarisana je promenljiva : bttipa1 na liniji 15
INFO  23:35:53,769 -  Print count calls = 2
INFO  23:35:53,769 -  Deklarisanih promenljivih ima = 4
INFO  23:35:53,769 - ===================================
INFO  23:35:53,776 - Parsiranje uspesno zavrseno!
